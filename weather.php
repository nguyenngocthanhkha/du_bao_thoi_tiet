<?php
header("Access-Control-Allow-Origin: *");
header('Content-Type: application/json; charset=utf-8');

// L·∫•y city t·ª´ request (m·∫∑c ƒë·ªãnh l√† Ho Chi Minh)
$city = isset($_GET['city']) ? $_GET['city'] : 'Ha Noi';

// API key c·ªßa b·∫°n
$apiKey = "7e1a92020fb10446446cb82105d49457"; // thay b·∫±ng key th·∫≠t

// Endpoint OpenWeather
$urlCurrent = "https://api.openweathermap.org/data/2.5/weather?q={$city}&appid={$apiKey}&lang=vi&units=metric";
$urlForecast = "https://api.openweathermap.org/data/2.5/forecast?q={$city}&appid={$apiKey}&lang=vi&units=metric";

// H√†m g·ªçi API
function callAPI($url) {
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_URL, $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    $output = curl_exec($ch);
    $httpCode = curl_getinfo($ch, CURLINFO_HTTP_CODE); // h√†m ƒë·ªÉ l·∫•y m√£ tr·∫°ng  th√°i 

    if ($output === false) {
        return ['error' => 'L·ªói k·∫øt n√≥i cURL' . curl_error($ch) , 'code' => 500 ];
    }

    curl_close($ch);
    $data = json_decode($output, true);

      if ($httpCode != 200) {
        return ['error' => $data['message'], 'code' => $httpCode];
    }

    return $data;
}

/* ==========================
   1Ô∏è‚É£ L·∫•y t·ªça ƒë·ªô t·ª´ Geo API
   ========================== */
$geoUrl = "http://api.openweathermap.org/geo/1.0/direct?q=" . urlencode($city) . ",vn&limit=1&appid={$apiKey}";
$geo = callAPI($geoUrl);

if (!$geo || count($geo) == 0) {
    echo json_encode(["error" => "Kh√¥ng t√¨m th·∫•y th√†nh ph·ªë"]);
    exit;
}

$lat = $geo[0]['lat'];
$lon = $geo[0]['lon'];
$cityName = $geo[0]['name'];

/* ==========================
   2Ô∏è‚É£ G·ªçi API th·ªùi ti·∫øt b·∫±ng lat/lon
   ========================== */
$urlCurrent  = "https://api.openweathermap.org/data/2.5/weather?lat={$lat}&lon={$lon}&appid={$apiKey}&lang=vi&units=metric";
$urlForecast = "https://api.openweathermap.org/data/2.5/forecast?lat={$lat}&lon={$lon}&appid={$apiKey}&lang=vi&units=metric";

$current  = callAPI($urlCurrent);
$forecast = callAPI($urlForecast);

// Tr·∫£ JSON v·ªÅ cho frontend
if (!$current || !$forecast || isset($current['cod']) && $current['cod'] != 200) {
    echo json_encode([
        "error" => "Kh√¥ng l·∫•y ƒë∆∞·ª£c d·ªØ li·ªáu t·ª´ OpenWeather",
        "current_raw" => $current,
        "forecast_raw" => $forecast
    ]);
    exit;
}

/* ==========================
   3Ô∏è‚É£ G·ª£i √Ω trang ph·ª•c
   ========================== */
$temp = $current['main']['temp'];
$desc = strtolower($current['weather'][0]['description']);
$suggestion = "H√¥m nay th·ªùi ti·∫øt d·ªÖ ch·ªãu, m·∫∑c tho·∫£i m√°i nh√©!";

if (strpos($desc, 'm∆∞a') !== false) {
    $suggestion = "Tr·ªùi c√≥ m∆∞a, nh·ªõ mang √°o m∆∞a ho·∫∑c √¥ ‚òî";
} elseif ($temp < 20) {
    $suggestion = "Tr·ªùi l·∫°nh, n√™n m·∫∑c √°o kho√°c ·∫•m üß•";
} elseif ($temp > 32) {
    $suggestion = "Tr·ªùi n√≥ng, nh·ªõ m·∫∑c ƒë·ªì tho√°ng m√°t üëï v√† u·ªëng nhi·ªÅu n∆∞·ªõc üíß";
}

/* ==========================
   4Ô∏è‚É£ Nh·∫Øc nh·ªü ng√†y mai
   ========================== */
$reminder = null;
if (isset($forecast['list'][8])) {
    $tomorrowDesc = strtolower($forecast['list'][8]['weather'][0]['description']);
    if (strpos($tomorrowDesc, 'm∆∞a') !== false) {
        $reminder = "Ng√†y mai c√≥ m∆∞a, nh·ªõ mang √¥ nh√© ‚òî";
    } elseif (strpos($tomorrowDesc, 'n·∫Øng') !== false) {
        $reminder = "Ng√†y mai tr·ªùi n·∫Øng, nh·ªõ b√¥i kem ch·ªëng n·∫Øng üåû";
    } else {
        $reminder = "Ng√†y mai th·ªùi ti·∫øt kh√° ·ªïn, c·ª© tho·∫£i m√°i nh√© ‚úÖ";
    }
}

/* ==========================
   5Ô∏è‚É£ Tr·∫£ d·ªØ li·ªáu v·ªÅ frontend
   ========================== */
echo json_encode([
    "city"       => $cityName,
    "current"    => $current,
    "forecast"   => $forecast,
    "suggestion" => $suggestion,
    "reminder"   => $reminder
]);
